2020-04-26 21:04:35,652  INFO Version:21 - HV000001: Hibernate Validator 6.0.18.Final
2020-04-26 21:04:39,080 ERROR SpringApplication:826 - Application run failed
java.lang.IllegalStateException: Failed to load property source from location 'classpath:/application.yml'
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:545)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadForFileExtension(ConfigFileApplicationListener.java:494)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:464)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$null$7(ConfigFileApplicationListener.java:443)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$8(ConfigFileApplicationListener.java:443)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:440)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$0(ConfigFileApplicationListener.java:335)
	at org.springframework.boot.context.config.FilteredPropertySource.apply(FilteredPropertySource.java:54)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:323)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.addPropertySources(ConfigFileApplicationListener.java:214)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.postProcessEnvironment(ConfigFileApplicationListener.java:198)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEnvironmentPreparedEvent(ConfigFileApplicationListener.java:188)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEvent(ConfigFileApplicationListener.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:76)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:53)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.tai.eureka.EurekaClientApplication.main(EurekaClientApplication.java:28)
Caused by: org.yaml.snakeyaml.error.YAMLException: java.nio.charset.MalformedInputException: Input length = 2
	at org.yaml.snakeyaml.reader.StreamReader.update(StreamReader.java:218)
	at org.yaml.snakeyaml.reader.StreamReader.ensureEnoughData(StreamReader.java:176)
	at org.yaml.snakeyaml.reader.StreamReader.ensureEnoughData(StreamReader.java:171)
	at org.yaml.snakeyaml.reader.StreamReader.peek(StreamReader.java:126)
	at org.yaml.snakeyaml.scanner.ScannerImpl.scanToNextToken(ScannerImpl.java:1177)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:287)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:227)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart.produce(ParserImpl.java:195)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:158)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:148)
	at org.yaml.snakeyaml.composer.Composer.checkNode(Composer.java:72)
	at org.yaml.snakeyaml.constructor.BaseConstructor.checkData(BaseConstructor.java:114)
	at org.yaml.snakeyaml.Yaml$1.hasNext(Yaml.java:543)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:160)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:134)
	at org.springframework.boot.env.OriginTrackedYamlLoader.load(OriginTrackedYamlLoader.java:75)
	at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:50)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadDocuments(ConfigFileApplicationListener.java:562)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:518)
	... 25 more
Caused by: java.nio.charset.MalformedInputException: Input length = 2
	at java.nio.charset.CoderResult.throwException(CoderResult.java:281)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:339)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at org.yaml.snakeyaml.reader.UnicodeReader.read(UnicodeReader.java:125)
	at org.yaml.snakeyaml.reader.StreamReader.update(StreamReader.java:183)
	... 43 more
2020-04-26 21:16:40,000  INFO Version:21 - HV000001: Hibernate Validator 6.0.18.Final
2020-04-26 21:16:43,213 ERROR SpringApplication:826 - Application run failed
java.lang.IllegalStateException: Failed to load property source from location 'classpath:/application.yml'
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:545)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadForFileExtension(ConfigFileApplicationListener.java:494)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:464)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$null$7(ConfigFileApplicationListener.java:443)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$8(ConfigFileApplicationListener.java:443)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:440)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$0(ConfigFileApplicationListener.java:335)
	at org.springframework.boot.context.config.FilteredPropertySource.apply(FilteredPropertySource.java:54)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:323)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.addPropertySources(ConfigFileApplicationListener.java:214)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.postProcessEnvironment(ConfigFileApplicationListener.java:198)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEnvironmentPreparedEvent(ConfigFileApplicationListener.java:188)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEvent(ConfigFileApplicationListener.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:76)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:53)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.tai.eureka.EurekaClientApplication.main(EurekaClientApplication.java:28)
Caused by: org.yaml.snakeyaml.error.YAMLException: java.nio.charset.MalformedInputException: Input length = 2
	at org.yaml.snakeyaml.reader.StreamReader.update(StreamReader.java:218)
	at org.yaml.snakeyaml.reader.StreamReader.ensureEnoughData(StreamReader.java:176)
	at org.yaml.snakeyaml.reader.StreamReader.ensureEnoughData(StreamReader.java:171)
	at org.yaml.snakeyaml.reader.StreamReader.peek(StreamReader.java:126)
	at org.yaml.snakeyaml.scanner.ScannerImpl.scanToNextToken(ScannerImpl.java:1177)
	at org.yaml.snakeyaml.scanner.ScannerImpl.fetchMoreTokens(ScannerImpl.java:287)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:227)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart.produce(ParserImpl.java:195)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:158)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:148)
	at org.yaml.snakeyaml.composer.Composer.checkNode(Composer.java:72)
	at org.yaml.snakeyaml.constructor.BaseConstructor.checkData(BaseConstructor.java:114)
	at org.yaml.snakeyaml.Yaml$1.hasNext(Yaml.java:543)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:160)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:134)
	at org.springframework.boot.env.OriginTrackedYamlLoader.load(OriginTrackedYamlLoader.java:75)
	at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:50)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadDocuments(ConfigFileApplicationListener.java:562)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:518)
	... 25 more
Caused by: java.nio.charset.MalformedInputException: Input length = 2
	at java.nio.charset.CoderResult.throwException(CoderResult.java:281)
	at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:339)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
	at java.io.InputStreamReader.read(InputStreamReader.java:184)
	at org.yaml.snakeyaml.reader.UnicodeReader.read(UnicodeReader.java:125)
	at org.yaml.snakeyaml.reader.StreamReader.update(StreamReader.java:183)
	... 43 more
2020-04-26 21:17:17,664  INFO Version:21 - HV000001: Hibernate Validator 6.0.18.Final
2020-04-26 21:17:20,940  INFO EurekaClientApplication:655 - The following profiles are active: dev
2020-04-26 21:17:22,738  INFO GenericScope:295 - BeanFactory id=f75c0cb4-ec96-38e9-b95c-27f600528ceb
2020-04-26 21:17:22,877  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-26 21:17:23,366  INFO TomcatWebServer:92 - Tomcat initialized with port(s): 9001 (http)
2020-04-26 21:17:23,546  INFO ContextLoader:284 - Root WebApplicationContext: initialization completed in 2551 ms
2020-04-26 21:17:25,114  INFO PropertySourcedRequestMappingHandlerMapping:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-26 21:17:25,226  WARN URLConfigurationSource:121 - No URLs will be polled as dynamic configuration sources.
2020-04-26 21:17:25,227  INFO URLConfigurationSource:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-26 21:17:25,234  WARN URLConfigurationSource:121 - No URLs will be polled as dynamic configuration sources.
2020-04-26 21:17:25,234  INFO URLConfigurationSource:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-26 21:17:25,369  INFO ThreadPoolTaskExecutor:171 - Initializing ExecutorService 'applicationTaskExecutor'
2020-04-26 21:17:27,469  WARN BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:86 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-26 21:17:27,598  INFO InstanceInfoFactory:72 - Setting initial instance status as: STARTING
2020-04-26 21:17:27,629  INFO DiscoveryClient:368 - Initializing Eureka in region us-east-1
2020-04-26 21:17:27,821  INFO DiscoveryJerseyProvider:70 - Using JSON encoding codec LegacyJacksonJson
2020-04-26 21:17:27,823  INFO DiscoveryJerseyProvider:71 - Using JSON decoding codec LegacyJacksonJson
2020-04-26 21:17:27,983  INFO DiscoveryJerseyProvider:80 - Using XML encoding codec XStreamXml
2020-04-26 21:17:27,983  INFO DiscoveryJerseyProvider:81 - Using XML decoding codec XStreamXml
2020-04-26 21:17:28,218  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 21:17:28,651  INFO DiscoveryClient:981 - Disable delta property : false
2020-04-26 21:17:28,651  INFO DiscoveryClient:982 - Single vip registry refresh property : null
2020-04-26 21:17:28,652  INFO DiscoveryClient:983 - Force full registry fetch : false
2020-04-26 21:17:28,652  INFO DiscoveryClient:984 - Application is null : false
2020-04-26 21:17:28,652  INFO DiscoveryClient:985 - Registered Applications size is zero : true
2020-04-26 21:17:28,653  INFO DiscoveryClient:987 - Application version is -1: true
2020-04-26 21:17:28,653  INFO DiscoveryClient:1070 - Getting all instance registry info from the eureka server
2020-04-26 21:17:28,828  INFO DiscoveryClient:1079 - The response status is 200
2020-04-26 21:17:28,831  INFO DiscoveryClient:1294 - Starting heartbeat executor: renew interval is: 30
2020-04-26 21:17:28,834  INFO InstanceInfoReplicator:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-26 21:17:28,838  INFO DiscoveryClient:468 - Discovery Client initialized at timestamp 1587907048837 with initial instances count: 1
2020-04-26 21:17:28,840  INFO EurekaServiceRegistry:41 - Registering application EUREKA_CLIENT_EXAMPLE1 with eureka with status UP
2020-04-26 21:17:28,841  INFO DiscoveryClient:1330 - Saw local status change event StatusChangeEvent [timestamp=1587907048841, current=UP, previous=STARTING]
2020-04-26 21:17:28,844  INFO DiscoveryClient:847 - DiscoveryClient_EUREKA_CLIENT_EXAMPLE1/windows10.microdone.cn:eureka_client_example1:9001: registering service...
2020-04-26 21:17:28,845  INFO DocumentationPluginsBootstrapper:160 - Context refreshed
2020-04-26 21:17:28,909  INFO DocumentationPluginsBootstrapper:163 - Found 1 custom documentation plugin(s)
2020-04-26 21:17:28,943  INFO DiscoveryClient:856 - DiscoveryClient_EUREKA_CLIENT_EXAMPLE1/windows10.microdone.cn:eureka_client_example1:9001 - registration status: 204
2020-04-26 21:17:28,970  INFO ApiListingReferenceScanner:41 - Scanning for api listing references
2020-04-26 21:17:31,625  INFO TomcatWebServer:204 - Tomcat started on port(s): 9001 (http) with context path ''
2020-04-26 21:17:31,626  INFO EurekaAutoServiceRegistration:145 - Updating port to 9001
2020-04-26 21:17:32,511  INFO EurekaClientApplication:61 - Started EurekaClientApplication in 15.104 seconds (JVM running for 16.979)
2020-04-26 21:18:15,850  INFO Version:21 - HV000001: Hibernate Validator 6.0.18.Final
2020-04-26 21:18:19,450  INFO EurekaClientApplication:655 - The following profiles are active: dev
2020-04-26 21:18:20,769  INFO GenericScope:295 - BeanFactory id=f75c0cb4-ec96-38e9-b95c-27f600528ceb
2020-04-26 21:18:20,928  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-26 21:18:21,297  INFO TomcatWebServer:92 - Tomcat initialized with port(s): 9001 (http)
2020-04-26 21:18:21,467  INFO ContextLoader:284 - Root WebApplicationContext: initialization completed in 1998 ms
2020-04-26 21:18:22,713  INFO PropertySourcedRequestMappingHandlerMapping:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-26 21:18:22,768  WARN URLConfigurationSource:121 - No URLs will be polled as dynamic configuration sources.
2020-04-26 21:18:22,769  INFO URLConfigurationSource:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-26 21:18:22,774  WARN URLConfigurationSource:121 - No URLs will be polled as dynamic configuration sources.
2020-04-26 21:18:22,774  INFO URLConfigurationSource:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-26 21:18:22,915  INFO ThreadPoolTaskExecutor:171 - Initializing ExecutorService 'applicationTaskExecutor'
2020-04-26 21:18:25,024  WARN BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:86 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-26 21:18:25,150  INFO InstanceInfoFactory:72 - Setting initial instance status as: STARTING
2020-04-26 21:18:25,185  INFO DiscoveryClient:368 - Initializing Eureka in region us-east-1
2020-04-26 21:18:25,374  INFO DiscoveryJerseyProvider:70 - Using JSON encoding codec LegacyJacksonJson
2020-04-26 21:18:25,376  INFO DiscoveryJerseyProvider:71 - Using JSON decoding codec LegacyJacksonJson
2020-04-26 21:18:25,599  INFO DiscoveryJerseyProvider:80 - Using XML encoding codec XStreamXml
2020-04-26 21:18:25,600  INFO DiscoveryJerseyProvider:81 - Using XML decoding codec XStreamXml
2020-04-26 21:18:25,866  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 21:18:26,310  INFO DiscoveryClient:981 - Disable delta property : false
2020-04-26 21:18:26,311  INFO DiscoveryClient:982 - Single vip registry refresh property : null
2020-04-26 21:18:26,311  INFO DiscoveryClient:983 - Force full registry fetch : false
2020-04-26 21:18:26,312  INFO DiscoveryClient:984 - Application is null : false
2020-04-26 21:18:26,312  INFO DiscoveryClient:985 - Registered Applications size is zero : true
2020-04-26 21:18:26,312  INFO DiscoveryClient:987 - Application version is -1: true
2020-04-26 21:18:26,313  INFO DiscoveryClient:1070 - Getting all instance registry info from the eureka server
2020-04-26 21:18:26,526  INFO DiscoveryClient:1079 - The response status is 200
2020-04-26 21:18:26,530  INFO DiscoveryClient:1294 - Starting heartbeat executor: renew interval is: 30
2020-04-26 21:18:26,533  INFO InstanceInfoReplicator:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-26 21:18:26,537  INFO DiscoveryClient:468 - Discovery Client initialized at timestamp 1587907106536 with initial instances count: 2
2020-04-26 21:18:26,540  INFO EurekaServiceRegistry:41 - Registering application EUREKA_CLIENT_EXAMPLE1 with eureka with status UP
2020-04-26 21:18:26,541  INFO DiscoveryClient:1330 - Saw local status change event StatusChangeEvent [timestamp=1587907106541, current=UP, previous=STARTING]
2020-04-26 21:18:26,544  INFO DiscoveryClient:847 - DiscoveryClient_EUREKA_CLIENT_EXAMPLE1/windows10.microdone.cn:eureka_client_example1:9001: registering service...
2020-04-26 21:18:26,545  INFO DocumentationPluginsBootstrapper:160 - Context refreshed
2020-04-26 21:18:26,580  INFO DocumentationPluginsBootstrapper:163 - Found 1 custom documentation plugin(s)
2020-04-26 21:18:26,609  INFO DiscoveryClient:856 - DiscoveryClient_EUREKA_CLIENT_EXAMPLE1/windows10.microdone.cn:eureka_client_example1:9001 - registration status: 204
2020-04-26 21:18:26,633  INFO ApiListingReferenceScanner:41 - Scanning for api listing references
2020-04-26 21:18:26,911  INFO TomcatWebServer:204 - Tomcat started on port(s): 9001 (http) with context path ''
2020-04-26 21:18:26,912  INFO EurekaAutoServiceRegistration:145 - Updating port to 9001
2020-04-26 21:18:28,177  INFO EurekaClientApplication:61 - Started EurekaClientApplication in 12.572 seconds (JVM running for 14.624)
2020-04-26 21:22:00,242  INFO Version:21 - HV000001: Hibernate Validator 6.0.18.Final
2020-04-26 21:22:03,522  INFO EurekaClientApplication:655 - The following profiles are active: dev
2020-04-26 21:22:04,688  INFO GenericScope:295 - BeanFactory id=f75c0cb4-ec96-38e9-b95c-27f600528ceb
2020-04-26 21:22:04,821  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-26 21:22:05,095  INFO TomcatWebServer:92 - Tomcat initialized with port(s): 9001 (http)
2020-04-26 21:22:05,262  INFO ContextLoader:284 - Root WebApplicationContext: initialization completed in 1720 ms
2020-04-26 21:22:06,151  INFO PropertySourcedRequestMappingHandlerMapping:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-26 21:22:06,188  WARN URLConfigurationSource:121 - No URLs will be polled as dynamic configuration sources.
2020-04-26 21:22:06,188  INFO URLConfigurationSource:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-26 21:22:06,193  WARN URLConfigurationSource:121 - No URLs will be polled as dynamic configuration sources.
2020-04-26 21:22:06,193  INFO URLConfigurationSource:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-26 21:22:06,297  INFO ThreadPoolTaskExecutor:171 - Initializing ExecutorService 'applicationTaskExecutor'
2020-04-26 21:22:08,247  WARN BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:86 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-26 21:22:08,378  INFO InstanceInfoFactory:72 - Setting initial instance status as: STARTING
2020-04-26 21:22:08,410  INFO DiscoveryClient:368 - Initializing Eureka in region us-east-1
2020-04-26 21:22:08,570  INFO DiscoveryJerseyProvider:70 - Using JSON encoding codec LegacyJacksonJson
2020-04-26 21:22:08,571  INFO DiscoveryJerseyProvider:71 - Using JSON decoding codec LegacyJacksonJson
2020-04-26 21:22:08,713  INFO DiscoveryJerseyProvider:80 - Using XML encoding codec XStreamXml
2020-04-26 21:22:08,713  INFO DiscoveryJerseyProvider:81 - Using XML decoding codec XStreamXml
2020-04-26 21:22:08,935  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 21:22:09,335  INFO DiscoveryClient:981 - Disable delta property : false
2020-04-26 21:22:09,336  INFO DiscoveryClient:982 - Single vip registry refresh property : null
2020-04-26 21:22:09,336  INFO DiscoveryClient:983 - Force full registry fetch : false
2020-04-26 21:22:09,337  INFO DiscoveryClient:984 - Application is null : false
2020-04-26 21:22:09,337  INFO DiscoveryClient:985 - Registered Applications size is zero : true
2020-04-26 21:22:09,337  INFO DiscoveryClient:987 - Application version is -1: true
2020-04-26 21:22:09,338  INFO DiscoveryClient:1070 - Getting all instance registry info from the eureka server
2020-04-26 21:22:09,501  INFO DiscoveryClient:1079 - The response status is 200
2020-04-26 21:22:09,505  INFO DiscoveryClient:1294 - Starting heartbeat executor: renew interval is: 30
2020-04-26 21:22:09,507  INFO InstanceInfoReplicator:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-26 21:22:09,511  INFO DiscoveryClient:468 - Discovery Client initialized at timestamp 1587907329510 with initial instances count: 2
2020-04-26 21:22:09,513  INFO EurekaServiceRegistry:41 - Registering application EUREKA_CLIENT_EXAMPLE1 with eureka with status UP
2020-04-26 21:22:09,514  INFO DiscoveryClient:1330 - Saw local status change event StatusChangeEvent [timestamp=1587907329514, current=UP, previous=STARTING]
2020-04-26 21:22:09,517  INFO DiscoveryClient:847 - DiscoveryClient_EUREKA_CLIENT_EXAMPLE1/192.168.31.190:9001: registering service...
2020-04-26 21:22:09,518  INFO DocumentationPluginsBootstrapper:160 - Context refreshed
2020-04-26 21:22:09,534  INFO DocumentationPluginsBootstrapper:163 - Found 1 custom documentation plugin(s)
2020-04-26 21:22:09,567  INFO DiscoveryClient:856 - DiscoveryClient_EUREKA_CLIENT_EXAMPLE1/192.168.31.190:9001 - registration status: 204
2020-04-26 21:22:09,579  INFO ApiListingReferenceScanner:41 - Scanning for api listing references
2020-04-26 21:22:09,783  INFO TomcatWebServer:204 - Tomcat started on port(s): 9001 (http) with context path ''
2020-04-26 21:22:09,784  INFO EurekaAutoServiceRegistration:145 - Updating port to 9001
2020-04-26 21:22:10,582  INFO EurekaClientApplication:61 - Started EurekaClientApplication in 10.631 seconds (JVM running for 12.654)
2020-04-26 21:24:11,687  INFO DiscoveryClient:871 - DiscoveryClient_EUREKA_CLIENT_EXAMPLE1/192.168.31.190:9001 - Re-registering apps/EUREKA_CLIENT_EXAMPLE1
2020-04-26 21:24:11,688  INFO DiscoveryClient:847 - DiscoveryClient_EUREKA_CLIENT_EXAMPLE1/192.168.31.190:9001: registering service...
2020-04-26 21:24:11,810  INFO DiscoveryClient:856 - DiscoveryClient_EUREKA_CLIENT_EXAMPLE1/192.168.31.190:9001 - registration status: 204
2020-04-26 21:24:41,719  INFO DiscoveryClient:981 - Disable delta property : false
2020-04-26 21:24:41,719  INFO DiscoveryClient:982 - Single vip registry refresh property : null
2020-04-26 21:24:41,719  INFO DiscoveryClient:983 - Force full registry fetch : false
2020-04-26 21:24:41,719  INFO DiscoveryClient:984 - Application is null : false
2020-04-26 21:24:41,720  INFO DiscoveryClient:985 - Registered Applications size is zero : true
2020-04-26 21:24:41,720  INFO DiscoveryClient:987 - Application version is -1: false
2020-04-26 21:24:41,720  INFO DiscoveryClient:1070 - Getting all instance registry info from the eureka server
2020-04-26 21:24:41,726  INFO DiscoveryClient:1079 - The response status is 200
2020-04-26 21:27:09,342  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 21:28:53,236  INFO DispatcherServlet:525 - Initializing Servlet 'dispatcherServlet'
2020-04-26 21:28:53,246  INFO DispatcherServlet:547 - Completed initialization in 10 ms
2020-04-26 21:31:34,585  INFO UserController:35 - 查询用户--info:abc
2020-04-26 21:31:34,749  INFO HikariDataSource:110 - HikariPool-1 - Starting...
2020-04-26 21:31:34,752  WARN DriverDataSource:70 - Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
2020-04-26 21:31:35,895  INFO PoolBase:527 - HikariPool-1 - Driver does not support get/set network timeout for connections. (oracle.jdbc.driver.T4CConnection.getNetworkTimeout()I)
2020-04-26 21:31:35,902  INFO HikariDataSource:123 - HikariPool-1 - Start completed.
2020-04-26 21:32:03,228  INFO UserController:35 - 查询用户--info:abc
2020-04-26 21:32:09,343  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 21:37:09,344  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 21:37:22,277  INFO Version:21 - HV000001: Hibernate Validator 6.0.18.Final
2020-04-26 21:37:27,682  INFO EurekaClientApplication:655 - The following profiles are active: dev
2020-04-26 21:37:28,914  INFO GenericScope:295 - BeanFactory id=f75c0cb4-ec96-38e9-b95c-27f600528ceb
2020-04-26 21:37:29,058  INFO PostProcessorRegistrationDelegate$BeanPostProcessorChecker:330 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-26 21:37:29,357  INFO TomcatWebServer:92 - Tomcat initialized with port(s): 9001 (http)
2020-04-26 21:37:29,538  INFO ContextLoader:284 - Root WebApplicationContext: initialization completed in 1833 ms
2020-04-26 21:37:30,765  INFO PropertySourcedRequestMappingHandlerMapping:69 - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-04-26 21:37:30,803  WARN URLConfigurationSource:121 - No URLs will be polled as dynamic configuration sources.
2020-04-26 21:37:30,803  INFO URLConfigurationSource:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-26 21:37:30,808  WARN URLConfigurationSource:121 - No URLs will be polled as dynamic configuration sources.
2020-04-26 21:37:30,809  INFO URLConfigurationSource:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-04-26 21:37:30,922  INFO ThreadPoolTaskExecutor:171 - Initializing ExecutorService 'applicationTaskExecutor'
2020-04-26 21:37:32,979  WARN BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger:86 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-04-26 21:37:33,113  INFO InstanceInfoFactory:72 - Setting initial instance status as: STARTING
2020-04-26 21:37:33,150  INFO DiscoveryClient:368 - Initializing Eureka in region us-east-1
2020-04-26 21:37:33,317  INFO DiscoveryJerseyProvider:70 - Using JSON encoding codec LegacyJacksonJson
2020-04-26 21:37:33,318  INFO DiscoveryJerseyProvider:71 - Using JSON decoding codec LegacyJacksonJson
2020-04-26 21:37:33,453  INFO DiscoveryJerseyProvider:80 - Using XML encoding codec XStreamXml
2020-04-26 21:37:33,453  INFO DiscoveryJerseyProvider:81 - Using XML decoding codec XStreamXml
2020-04-26 21:37:33,668  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 21:37:34,102  INFO DiscoveryClient:981 - Disable delta property : false
2020-04-26 21:37:34,103  INFO DiscoveryClient:982 - Single vip registry refresh property : null
2020-04-26 21:37:34,103  INFO DiscoveryClient:983 - Force full registry fetch : false
2020-04-26 21:37:34,103  INFO DiscoveryClient:984 - Application is null : false
2020-04-26 21:37:34,104  INFO DiscoveryClient:985 - Registered Applications size is zero : true
2020-04-26 21:37:34,105  INFO DiscoveryClient:987 - Application version is -1: true
2020-04-26 21:37:34,105  INFO DiscoveryClient:1070 - Getting all instance registry info from the eureka server
2020-04-26 21:37:34,314  INFO DiscoveryClient:1079 - The response status is 200
2020-04-26 21:37:34,317  INFO DiscoveryClient:1294 - Starting heartbeat executor: renew interval is: 30
2020-04-26 21:37:34,320  INFO InstanceInfoReplicator:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-04-26 21:37:34,325  INFO DiscoveryClient:468 - Discovery Client initialized at timestamp 1587908254324 with initial instances count: 2
2020-04-26 21:37:34,329  INFO EurekaServiceRegistry:41 - Registering application EUREKA-CLIENT-EXAMPLE1 with eureka with status UP
2020-04-26 21:37:34,330  INFO DiscoveryClient:1330 - Saw local status change event StatusChangeEvent [timestamp=1587908254330, current=UP, previous=STARTING]
2020-04-26 21:37:34,334  INFO DiscoveryClient:847 - DiscoveryClient_EUREKA-CLIENT-EXAMPLE1/192.168.31.190:9001: registering service...
2020-04-26 21:37:34,335  INFO DocumentationPluginsBootstrapper:160 - Context refreshed
2020-04-26 21:37:34,354  INFO DocumentationPluginsBootstrapper:163 - Found 1 custom documentation plugin(s)
2020-04-26 21:37:34,397  INFO DiscoveryClient:856 - DiscoveryClient_EUREKA-CLIENT-EXAMPLE1/192.168.31.190:9001 - registration status: 204
2020-04-26 21:37:34,411  INFO ApiListingReferenceScanner:41 - Scanning for api listing references
2020-04-26 21:37:34,639  INFO TomcatWebServer:204 - Tomcat started on port(s): 9001 (http) with context path ''
2020-04-26 21:37:34,641  INFO EurekaAutoServiceRegistration:145 - Updating port to 9001
2020-04-26 21:37:35,415  INFO EurekaClientApplication:61 - Started EurekaClientApplication in 13.419 seconds (JVM running for 15.407)
2020-04-26 21:38:32,998  INFO DispatcherServlet:525 - Initializing Servlet 'dispatcherServlet'
2020-04-26 21:38:33,008  INFO DispatcherServlet:547 - Completed initialization in 10 ms
2020-04-26 21:38:33,046  INFO UserController:35 - 查询用户--info:abc
2020-04-26 21:38:33,068  INFO HikariDataSource:110 - HikariPool-1 - Starting...
2020-04-26 21:38:33,070  WARN DriverDataSource:70 - Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
2020-04-26 21:38:33,833  INFO PoolBase:527 - HikariPool-1 - Driver does not support get/set network timeout for connections. (oracle.jdbc.driver.T4CConnection.getNetworkTimeout()I)
2020-04-26 21:38:33,838  INFO HikariDataSource:123 - HikariPool-1 - Start completed.
2020-04-26 21:38:59,488  INFO UserController:35 - 查询用户--info:abc
2020-04-26 21:39:05,642  INFO UserController:35 - 查询用户--info:abc
2020-04-26 21:42:34,111  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 21:47:34,113  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 21:52:34,115  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 21:57:34,116  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 22:02:34,118  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 22:07:34,120  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 22:12:34,122  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 22:17:34,124  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 22:22:34,125  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 22:27:34,127  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 22:32:34,130  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 22:37:34,132  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 22:42:34,134  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 22:47:34,135  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
2020-04-26 22:52:34,138  INFO ConfigClusterResolver:43 - Resolving eureka endpoints via configuration
