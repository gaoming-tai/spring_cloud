spring:
  application:
    name: eureka-client-example2 #指定应用名称 名称不可用下划线分割
  #zipkin server配置
  zipkin:
    #base-url: http://127.0.0.1:9411 #zipkin服务端接收链路数据路径
    sender:
      #type: web #数据传输方式  以http形式向zipkin server端发送数据
      type: rabbit #向rabbitmq中发送消息
  #sleuth 配置
  sleuth:
    sampler:
      probability: 1 #采样比  收集链路数据比例，1表示收集所有的请求链路数据  0.1表示只接收十分之请求链路日志数据
  #rabbitmq 配置
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    listener: #配置重试策略
      direct:
        retry:
          enabled: true
      simple:
        retry:
          enabled: true
#指定服务端口
server:
  port: 9002

#配置eureka client信息
eureka:
  instance:
    prefer-ip-address: true  #指定是否显示主机IP
    instance-id: ${spring.cloud.client.ip-address}:${server.port} #指定服务向注册中心注册服务id,以ip:port显示
    lease-renewal-interval-in-seconds: 30 #设置服务心跳时间  默认30s
    lease-expiration-duration-in-seconds: 60 #设置服务续约时间，即服务宕机后，多长时间会从注册中心移除该服务
  client:
    service-url:
          defaultZone: http://localhost:9000/eureka/ #指定eureka server 注册中心地址

#修改负载均衡策略 服务名称 - ribbon - NFLoadBalancerRuleClassName - 均衡策略全类名
eureka-client-example2:  #服务名称
    ribbon:
      NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule  #策略全类名
      #请求重试
      ConnectTimeout: 250 #Ribbon 的连接超时
      ReadTimeout: 1000 #Ribbon 数据读取超时时间
      OkToRetryOnAllOperations: true #是否对所有操作重试
      MaxAutoRetries: 1 #对当前实例重试次数
#配置链路追踪日志输出
logging:
  level:
    root: INFO
    org.springframework.web.servlet.DispatcherServlet: DEBUG
    org.springframework.cloud.sleuth: DEBUG